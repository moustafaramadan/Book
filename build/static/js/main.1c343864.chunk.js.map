{"version":3,"sources":["components/BookList.js","components/Shelf.js","components/Shelves.js","components/Home.js","BooksAPI.js","components/Search.js","App.js","index.js"],"names":["BookList","book","changeShelves","className","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","shelf","onChange","e","target","value","title","authors","Shelf","books","Array","isArray","map","b","id","Shelves","currentlyReading","filter","wantToRead","read","Home","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Search","handelDeleteSearch","search","searchedbooks","handleSearch","mixedBooks","onClick","type","placeholder","App","useState","setBooks","setSearch","setSearchedbooks","setMixedBooks","Map","booksID","setbooksID","getBooks","a","fetch","then","res","json","data","CreateBooks","useEffect","Mix","has","get","set","getSearch","query","maxResults","BooksAPI","method","body","JSON","stringify","location","updatedBooks","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c343864.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst BookList = ({ book, changeShelves }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${\r\n                book.imageLinks && book.imageLinks.thumbnail\r\n              })`,\r\n            }}\r\n          ></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n              defaultValue={book.shelf ? book.shelf : \"none\"}\r\n              onChange={(e) => changeShelves(book, e.target.value)}\r\n            >\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        <div className=\"book-authors\">{book.authors}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import React from 'react'\r\nimport BookList from './BookList'\r\nconst Shelf = ({books, title, changeShelves}) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n    <h2 className=\"bookshelf-title\">{title}</h2>\r\n    <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n            {books &&\r\n              Array.isArray(books) && books.map(b => (\r\n                <li key={b.id}>\r\n                    <BookList book={b} changeShelves={changeShelves}/>\r\n                </li>\r\n            ))}\r\n\r\n        </ol>\r\n    </div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default Shelf\r\n","import React from \"react\";\r\nimport Shelf from \"./Shelf\";\r\nconst Shelves = ({ books, changeShelves }) => {\r\n  const currentlyReading =\r\n    books &&\r\n    Array.isArray(books) &&\r\n    books.filter((book) => book.shelf === \"currentlyReading\");\r\n  const wantToRead =\r\n    books &&\r\n    Array.isArray(books) &&\r\n    books.filter((book) => book.shelf === \"wantToRead\");\r\n  const read =\r\n    books &&\r\n    Array.isArray(books) &&\r\n    books.filter((book) => book.shelf === \"read\");\r\n  return (\r\n    <div>\r\n      <Shelf\r\n        title=\"Currently Reading\"\r\n        books={currentlyReading}\r\n        changeShelves={changeShelves}\r\n      />\r\n      <Shelf\r\n        title=\"Want to Read\"\r\n        books={wantToRead}\r\n        changeShelves={changeShelves}\r\n      />\r\n      <Shelf title=\"Read\" books={read} changeShelves={changeShelves} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shelves;\r\n","import React from \"react\";\r\nimport Shelves from \"./Shelves\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = ({books, changeShelves }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <Shelves books={books} changeShelves={changeShelves} />\r\n        <div className=\"open-search\">\r\n        <Link to=\"/search\" className='open-search'> Add a Book </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from \"react\";\r\nimport BookList from \"./BookList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Search = ({handelDeleteSearch, changeShelves, searchedbooks, search, handleSearch, mixedBooks}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\" onClick={handelDeleteSearch}>\r\n          Close\r\n        </Link>\r\n         \r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, author, or ISBN\"\r\n              value={search}\r\n              onChange={(e) => handleSearch(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {mixedBooks &&\r\n              Array.isArray(mixedBooks) &&\r\n              mixedBooks.map((b) => (\r\n                <li key={b.id}>\r\n                  <BookList book={b} changeShelves={changeShelves} />\r\n                </li>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Search from \"./components/Search\";\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [searchedbooks, setSearchedbooks] = useState([]);\n  const [mixedBooks, setMixedBooks]= useState([])\n  const [booksID, setbooksID]= useState(new Map())\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getBooks = async () => {\n    const res = await BooksAPI.getAll();\n    setBooks(res);\n    setbooksID  (CreateBooks(res))\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, [search]);\n\nuseEffect (()=>{\nconst Mix= searchedbooks?.map(book=>{\n if(booksID.has(book.id)){\n  return booksID.get(book.id);\n }else{\n  return book;\n }\n});\nsetMixedBooks(Mix)\n}, [searchedbooks])\n\nconst CreateBooks=(books)=>{\nconst map= new Map();\nbooks.map(book=> map.set(book.id, book));\nreturn map;\n}\n\nconst getSearch= async()=>{\n  const data= await BooksAPI.search(search);\n  setSearchedbooks (data)\n}\n\n  useEffect(() => {\n    getSearch();\n  }, [search]);\n\n  const handelDeleteSearch = () => {\n    setSearch(\"\");\n  };\n\n  const changeShelves = (book, location) => {\n    const updatedBooks = books.map((b) => {\n      if (b.id === book.id) {\n        book.shelf = location;\n        return book;\n      }\n      return b;\n    });\n\n    setBooks(updatedBooks);\n    BooksAPI.update(book, location);\n  };\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<Home books={books} changeShelves={changeShelves} />}\n          />\n          <Route\n            path=\"search\"\n            element={\n              <Search\n                handelDeleteSearch={handelDeleteSearch}\n                changeShelves={changeShelves}\n                searchedbooks={searchedbooks}\n                search={search}\n                handleSearch={handleSearch}\n                mixedBooks={mixedBooks}\n              />\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}